{"version":3,"sources":["components/Blip.js","components/AppKey.js","api/Custom.js","components/Code.js","components/MenuDown.js","components/MenuUp.js","api/Color.js","components/ListColorHeader.js","components/ListColorBackground.js","components/ListColorSend.js","components/ListColorReicived.js","components/ChatIcon.js","components/LastCustom.js","components/Colors.js","App.js","serviceWorker.js","index.js"],"names":["Blip","props","blipClient","BlipChat","build","ws","key","localStorage","getItem","withAppKey","appKey","withS","substring","length","JSON","parse","style","i","withCustomStyle","withStyle","withButton","icon","toogleChat","wk","wb","setItem","code","className","data-toggle","type","onClick","name","id","autoComplete","destroy","error","alert","stop","AppKey","fontFamily","letterSpacing","onChange","document","querySelector","value","AppKeychange","aria-describedby","placeholder","Custom","custom","Promise","resolve","reject","fetch","method","then","res","json","headers","response","data","setState","Code","readOnly","rows","copyText","getElementById","select","execCommand","copyCode","width","height","viewBox","fill","xmlns","fillRule","d","clipRule","setCustom","MenuDown","to","href","MenuUp","Color","colors","ListColorHeader","useState","setColors","useEffect","getColors","map","color","hexString","colorId","local","ListColorBackground","ListColorSend","ListColorReicived","ChatIcon","addButtonIcon","LastCustom","getCustom","c","_id","Colors","strg","addColor","App","path","exact","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","URL","process","origin","addEventListener","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.cb4df955.chunk.js","sourcesContent":["import React from 'react';\nimport { BlipChat } from \"blip-chat-widget\";\n\nconst Blip = (props) =>{\n  \n  let blipClient = new BlipChat()\n\n  function start(){\n    blipClient.build()\n  }\n\n  function toogle(){\n    blipClient.toogleChat();\n  }\n\n  function appKey(key){\n    blipClient.withAppKey(key)\n  }\n  \n  function withStyle(){\n\n    let withS = localStorage.getItem(\"withStyle\");\n    \n    if(withS !== null){\n      withS = withS.substring(0,(withS.length - 1));\n    \n    withS = \"{\"+withS+\"}\";\n    withS = JSON.parse(withS)\n    \n    let style=\"\";\n    for(let i in withS){\n      \n      if (i === \"header\"){\n        style+= '#blip-chat-header {background-color: '+withS[i]+' ! important} '\n      }\n      if (i === \"enviadas\"){\n        style+= 'div.bubble.right {background-color: '+withS[i]+' ! important} '\n      }\n      if (i === \"recebidas\"){\n        style+= 'div.bubble.left {background-color: '+withS[i]+' ! important} '\n      }\n      if (i === \"background\"){\n        style+= '#messages-list {background-color: '+withS[i]+' ! important} '\n      }\n    }\n    \n    blipClient.withCustomStyle(style)\n\n    return style;\n    }\n    \n  }\n  function withButton(){\n    blipClient.withButton({\n      icon:\n        localStorage.getItem(\"withButton\"),\n    })\n  }\n\n  function stop(){\n    try{\n\n      blipClient.destroy();\n    } catch (error) {\n     alert(\"Chat não Cosntruido!\");\n    }\n  }\n  function code(ws,wk,wb){\n      localStorage.setItem(\"code\",(`<script src=\"https://unpkg.com/blip-chat-widget\" type=\"text/javascript\">\n      </script>\n      <script>\n          (function () {\n              window.onload = function () {\n                  new BlipChat()\n                  .withAppKey(\"`+wk+`\")\n                  .withButton({\"icon\":\"`+wb+`\"})\n                  .withCustomStyle(\"`+ws+`\")\n                  .withCustomCommonUrl(\"https://chat.blip.ai\")\n                  .build();\n              }\n          })();\n      </script>`))\n  }\n  // FAZ A CONSTRUÇÃO BÁSICA DO CHAT\n  function build(){\n    //withStyle\n    let ws =\"\";\n    //with button\n    let wb =\"\";\n    //with key\n    let wk =\"\";\n\n\n    let key = localStorage.getItem('appKey');\n    \n    appKey(key)\n    ws = withStyle()\n    withButton()\n    start()\n    toogle()\n\n    wk = key\n    wb = localStorage.getItem(\"withButton\");\n    \n\n    code(ws,wk,wb)\n    \n  }\n\n\n  return(\n    // cm9iaW46ZjhjZDMxNmEtZTg5Ni00ZDE2LWFmODMtMjg4N2NiNGMxYjQy\n    <> \n      <br/>\n      <div className=\"btn-group btn-group-toggle\" data-toggle=\"buttons\">\n      <label className=\"btn btn-secondary\">\n        <input type=\"radio\" onClick={()=>build()} name=\"options\" id=\"option1\" autoComplete=\"off\"/> Build\n      </label>\n      <label className=\"btn btn-secondary\">\n        <input type=\"radio\" onClick={()=>stop()} name=\"options\" id=\"option3\" autoComplete=\"off\"/> Destroy\n      </label>\n    </div>\n      <br/><br/>\n    </>\n  )\n}\n\nexport default Blip","import React from 'react'\n\nexport const AppKey = () =>{\n    \n    return(\n        <form>\n            <h4>&nbsp;</h4>\n            <div className=\"form-group\">\n                <input type=\"text\" style={{fontFamily: \"courier new\",letterSpacing:\"0.5em\"}} onChange={()=>AppKeychange()} className=\"form-control text-center ml-1\" id=\"appKey\" aria-describedby=\"appKeyHelp\" placeholder=\"APP KEY\"/>\n                <p id=\"appKeyHelp\">\n                    <small>Inserir App Key do seu chat boot.</small>\n                </p>\n            </div>\n        </form>\n    )\n    function AppKeychange(){\n        let appKey = document.querySelector(\"#appKey\").value\n        \n        localStorage.setItem('appKey', appKey);\n    }\n}","// import cust from \"./colors-data.json\";\n\nexport class Custom {\n\n    static getCustom() {\n\n        var custom;\n        \n        return new Promise((resolve, reject) => {\n            fetch('http://localhost:3000/', {\n            method: 'GET',\n            }).then(res=>res.json())\n            .then(res =>{\n                custom = res\n                if (custom) {\n                    resolve(custom);\n                } else {\n                    reject();   \n                }\n            });\n        });\n    }\n\n\n    static setCustom(json) {\n\n        const requestOptions = {\n            method: 'POST',\n            headers: { \n                // \"Content-Type\": \"application/x-www-form-urlencoded\"\n                // \"Content-Type\": \"application/x-www-form-urlencoded\"\n            },\n            // body: JSON.stringify(json)\n        };\n        fetch('http://localhost:3000/'+json, requestOptions)\n            .then(response => response.json())\n            .then(data => this.setState());\n    }\n}","import React from 'react'\nimport { Custom } from '../api/Custom';\n\nexport const Code = () =>{\n    \n    return(\n        <div>\n            <div className=\"form-group\">\n            <textarea readOnly className=\"form-control\" id=\"codeArea\" rows=\"3\" value={localStorage.getItem(\"code\")}>{localStorage.getItem(\"code\")}</textarea>\n                <div>            \n                    <br/>\n                    <ul className=\"nav justify-content-center\">                        \n                        <li className=\"nav-item\" style={{\"cursor\":\"pointer\"}} onClick={()=>copyCode()}>\n                                <svg style={{\"margin\":\"10px\"}} className=\"bi bi-clipboard\" width=\"2em\" height=\"2em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                                    <path fillRule=\"evenodd\" d=\"M4 1.5H3a2 2 0 00-2 2V14a2 2 0 002 2h10a2 2 0 002-2V3.5a2 2 0 00-2-2h-1v1h1a1 1 0 011 1V14a1 1 0 01-1 1H3a1 1 0 01-1-1V3.5a1 1 0 011-1h1v-1z\" clipRule=\"evenodd\"/>\n                                    <path fillRule=\"evenodd\" d=\"M9.5 1h-3a.5.5 0 00-.5.5v1a.5.5 0 00.5.5h3a.5.5 0 00.5-.5v-1a.5.5 0 00-.5-.5zm-3-1A1.5 1.5 0 005 1.5v1A1.5 1.5 0 006.5 4h3A1.5 1.5 0 0011 2.5v-1A1.5 1.5 0 009.5 0h-3z\" clipRule=\"evenodd\"/>\n                                </svg>\n                        </li>          \n                        <li style={{\"cursor\":\"pointer\"}}  onClick={()=>share()}>     \n                            <svg style={{\"margin\":\"10px\"}} className=\"bi bi-cloud-upload\" width=\"2em\" height=\"2em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                                <path d=\"M4.887 6.2l-.964-.165A2.5 2.5 0 1 0 3.5 11H6v1H3.5a3.5 3.5 0 1 1 .59-6.95 5.002 5.002 0 1 1 9.804 1.98A2.501 2.501 0 0 1 13.5 12H10v-1h3.5a1.5 1.5 0 0 0 .237-2.981L12.7 7.854l.216-1.028a4 4 0 1 0-7.843-1.587l-.185.96z\"/>\n                                <path fillRule=\"evenodd\" d=\"M5 8.854a.5.5 0 0 0 .707 0L8 6.56l2.293 2.293A.5.5 0 1 0 11 8.146L8.354 5.5a.5.5 0 0 0-.708 0L5 8.146a.5.5 0 0 0 0 .708z\"/>\n                                <path fillRule=\"evenodd\" d=\"M8 6a.5.5 0 0 1 .5.5v8a.5.5 0 0 1-1 0v-8A.5.5 0 0 1 8 6z\"/>\n                            </svg>      \n                        </li>\n                    </ul>        \n                </div>\n            </div>\n            \n        </div>\n    )\n\n    function copyCode(){\n        document.querySelector(\"#codeArea\").value = localStorage.getItem(\"code\")\n       let copyText = document.getElementById(\"codeArea\");\n        copyText.select();\n        if(copyText.value){\n            document.execCommand(\"copy\");\n        }\n    }\n\n    function share(){\n        // let l = localStorage.getItem(\"withStyle\")\n        // \"header\":\"1111\",\"send\":\"2222\",\"received\":\"3333\",\"background\":\"4444\",\"icon\":\"5555\"\n        Custom.setCustom('11111/2222/3333/4444/5555')\n    }\n}\n\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\n\nexport const MenuDown = () =>{\n\n    \n\n    return(\n        <>\n            {\n                <ul className=\"nav justify-content-center\">\n                    <li className=\"nav-item\">\n                        <Link to=\"/\">   \n                            <span className=\"nav-link\" href=\"#\">Home</span> \n                        </Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link to=\"/\" onClick={()=>clearStorage()}>\n                        <span className=\"nav-link\" >Zerar</span> \n                    </Link>\n                    </li>\n                </ul>\n            }\n            \n        </>\n        \n    )\n    \n    function clearStorage(){\n\n        localStorage.setItem(\"withButton\",\"\");\n        localStorage.setItem(\"withStyle\",\"\");\n        localStorage.setItem(\"appKey\",\"\");\n        localStorage.setItem(\"code\",\"\");\n    }\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\n\nexport const MenuUp = () =>{\n\n    return(\n        <>\n            <ul className=\"nav justify-content-center\">\n                <li className=\"nav-item\">\n                    <Link to=\"/ListColorHeader\"> \n                        <span className=\"nav-link\" href=\"#\">Header</span>\n                    </Link>\n                </li>\n                <li className=\"nav-item\">\n                    <Link to=\"/ListColorSend\">\n                        <span className=\"nav-link\" href=\"#\">Enviadas</span>\n                    </Link>\n                </li>\n                <li className=\"nav-item\">\n                    <Link to=\"/ListColorReicived\">\n                        <span className=\"nav-link\" href=\"#\">Recebidas</span>\n                    </Link>\n                </li>\n                <li className=\"nav-item\">\n                    <Link to=\"/ListColorBackground\">\n                        <span className=\"nav-link\" href=\"#\">Background</span>\n                    </Link>\n                </li>\n                <li className=\"nav-item\">\n                    <Link to=\"/ChatIcon\">\n                        <span className=\"nav-link\" href=\"#\">Icon</span>\n                    </Link>\n                </li>\n            </ul>\n        </>\n    )\n    \n}","// import colors from \"./colors-data.json\";\n\nexport class Color {\n\n    static getColors() {\n\n        var colors;\n        \n        return new Promise((resolve, reject) => {\n            fetch('https://jonasjacek.github.io/colors/data.json', {\n            method: 'GET',\n            }).then(res=>res.json())\n            .then(res =>{\n                \n                colors = res\n                if (colors) {\n                    resolve(colors);\n                    \n                } else {\n                    reject();\n                }\n            });\n        });\n    }\n}","import React, { useState, useEffect} from 'react';\nimport {Colors} from \"../components\"\nimport { Color  } from '../api/Color';\n\nexport const ListColorHeader = () =>{\n \n    const [colors, setColors] = useState([]);\n\n    function startUp(){\n        \n        let c = Color.getColors();\n        \n        c.then(\n            function(data){\n                setColors(data);\n                \n            }\n        )\n    }\n    useEffect(() => startUp(),[])\n    \n    return(\n        \n        <>\n            <h3>Cabeçalho</h3>\n            <div className=\"row colors container\">\n            </div>\n            \n           {\n           \n           colors.map(color=>\n                    \n               <Colors color={color.hexString} key={color.colorId} local=\"header\"></Colors>\n               \n            )}\n        </>\n    )\n}\n","import React, { useState, useEffect} from 'react';\nimport {Colors} from \"../components\"\nimport { Color  } from '../api/Color';\n\nexport const ListColorBackground = () =>{\n    const [colors, setColors] = useState([]);\n\n    function startUp(){\n        \n        let c = Color.getColors();\n        \n        c.then(\n            function(data){\n                setColors(data);\n            }\n        )\n    }\n    useEffect(() => startUp(),[])\n    \n    return(\n        \n        <>\n            <h3>Background</h3>\n            <div className=\"row colors container\">\n            </div>\n            \n           {\n           \n           colors.map(color=>\n               <Colors color={color.hexString} key={color.colorId} local=\"background\"></Colors> \n            )}\n        </>\n    )\n}\n","import React, { useState, useEffect} from 'react';\nimport {Colors} from \"../components\"\nimport { Color  } from '../api/Color';\n\nexport const ListColorSend = () =>{\n    const [colors, setColors] = useState([]);\n\n    function startUp(){\n        \n        let c = Color.getColors();\n        \n        c.then(\n            function(data){\n                setColors(data);\n                \n            }\n        )\n    }\n    useEffect(() => startUp(),[])\n    \n    return(\n        \n        <>\n            <h3>Enviadas</h3>\n            <div className=\"row colors container\">\n            </div>\n            \n           {\n           \n           colors.map(color=>\n                    \n               <Colors color={color.hexString} key={color.colorId} local=\"enviadas\"></Colors> \n            )}\n        </>\n    )\n}\n","import React, { useState, useEffect} from 'react';\nimport {Colors} from \"../components\"\nimport { Color  } from '../api/Color';\n\nexport const ListColorReicived = () =>{\n    \n    const [colors, setColors] = useState([]);\n\n    function startUp(){\n        \n        let c = Color.getColors();\n        \n        c.then(\n            function(data){\n                setColors(data);\n                \n            }\n        )\n    }\n    useEffect(() => startUp(),[])\n    \n    return(\n        \n        <>\n            <h3>Recebidas</h3>\n            <div className=\"row colors container\">\n            </div>\n            \n           {\n           \n           colors.map(color=>\n                    \n               <Colors color={color.hexString} key={color.colorId} local=\"recebidas\"></Colors> \n            )}\n        </>\n    )\n}\n","import React from 'react'\n\nexport const ChatIcon = () =>{\n    \n    return(\n        <>\n\n            <h3>Chat</h3>\n            \n        \n            <div className=\"form-group\">\n                <input type=\"text\" onChange={()=>addButtonIcon()} className=\"form-control\" id=\"chatIcon\" aria-describedby=\"ChatIConKeyHelp\" placeholder=\"URL CHAT ICON\"/>\n                <p id=\"ChatIConKeyHelp\">\n                    <small>Inserir o caminho da imagem para o icone do seu chat boot.</small>\n                </p>\n            </div>\n            \n            \n        </>\n\n    )\n\n    function addButtonIcon(){\n        \n        let icon = document.querySelector(\"#chatIcon\").value\n        \n        localStorage.setItem('withButton', icon);\n        \n    }\n\n   \n}\n","import React, { useState, useEffect} from 'react';\nimport { Custom } from '../api/Custom';\n\n\nexport const LastCustom = () =>{\n    const [custom, setCustom] = useState([]);\n\n    function startUp(){\n        \n        let c = Custom.getCustom();\n        \n        c.then(\n            function(data){\n                \n                setCustom(data);               \n                \n            }\n        )\n    }\n    useEffect(() => startUp(),[])\n    \n    return(\n        \n        <>\n            <h5>Last</h5>\n            \n            {\n                custom.map(c=>\n                // c.header\n                <button key={c._id} style={{\"margin\":\"5px\"}} className=\"btn btn-primary\">{c._id}</button>\n                )\n            }\n\n            \n        </>\n    )\n}\n","import React from 'react'\n\nexport const Colors = props =>{\n\n    return(\n        <>\n\n            <button onClick={()=>addColor(props.color,props.local)} style={{\"backgroundColor\": \"\"+props.color}} className=\"btn\">&nbsp;&nbsp;&nbsp;&nbsp;</button>\n        \n        </>\n    )\n   \n    function addColor(color,local){\n     let strg = (localStorage.getItem(\"withStyle\")) === null? \"\":localStorage.getItem(\"withStyle\");      \n     strg += '\"'+local+'\":\"'+color+'\",'\n     localStorage.setItem(\"withStyle\",strg);      \n    }\n}","import React from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Blip from \"./components/Blip\";\nimport { AppKey } from \"./components\";\nimport { Code } from \"./components\";\nimport { MenuDown } from \"./components\";\nimport { MenuUp } from \"./components\";\nimport { ListColorHeader } from \"./components\";\nimport { ListColorBackground } from \"./components\";\nimport { ListColorSend } from \"./components\";\nimport { ListColorReicived } from \"./components\";\nimport { ChatIcon } from \"./components\";\nimport { LastCustom } from \"./components\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <AppKey />\n\n        <Blip />\n        <Code />\n        <Router>\n          <Switch>\n            <Route path=\"/ChatIcon\" exact component={ChatIcon} />\n            <Route path=\"/ListColorSend\" exact component={ListColorSend} />\n            <Route\n              path=\"/ListColorReicived\"\n              exact\n              component={ListColorReicived}\n            />\n            <Route\n              path=\"/ListColorBackground\"\n              exact\n              component={ListColorBackground}\n            />\n            <Route path=\"/ListColorHeader\" exact component={ListColorHeader} />\n          </Switch>\n          \n          <LastCustom />\n          <MenuUp />\n          <MenuDown />\n        </Router>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}